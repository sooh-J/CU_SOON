# i=0
for index, row in df_items.iterrows():
    # df_items columns을 반대로 돌며 실행. 그 column의 이름은 col, 그 column이 뒤에서 부터 몇번째인지는 inv_i_col.
    for inv_i_col, col in enumerate(list(reversed(list(df_items.columns)[0:-1]))): 
        val = row[col] # row 행의 col 열에 있는 값은 val
        if "?" in str(val):  # 만약 row 행의 col 열에 ?값이 있다면 split 해준 후 하나씩 뒤로 밀기.
            # print(val)
            # print(index, int(len(df_items.columns)-inv_i_col-2))
            
            # inv_i_col은 뒤에서부터 몇번째 열인지. i_col은 앞에서부터 몇번째 열인지
            i_col = int(len(df_items.columns)-inv_i_col-2) 
            
            # n_change_col = 
            split_res = str(val).split("?")
            # print(split_res)
            # print(i_col)
            # print(df_items.iloc[index,i_col:i_col+2].shape)
    #         # df_items.iloc[index, -inv_i_col+2:-1] = df_items[index, col+1, (개수 : )]
    #         # df_items[index, col+2 : -1] = df_items[index, col+1, (개수 : )]
            df_items.iloc[index, i_col +2 : -1] = df_items.iloc[index, i_col+1 : -2]
            df_items.iloc[index, i_col:i_col+2] = split_res
    
    #         df_items.loc[index, 'ItemName':'ImageUrl'] = list(df_items.loc[index, 'ItemId':'Price'])
    #         df_items.loc[index, 'ItemNameMiddle':'ItemId'] = split_res    
    # # print(index, row)
    # # print(row[['ItemIdLarge'][0]])
    # i+=1
    # if i==10000:
    #     break
